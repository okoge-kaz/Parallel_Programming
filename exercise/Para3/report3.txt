--------------------------

学籍番号 : 20B30790
氏名 : 藤井一喜

--------------------------

回答1 :
1.1) OrderedShapeManagerの実装についての説明
利用したクラスについてや、最小限の実装行で済ませる工夫などを説明して下さい。





1.2)
空欄Aに入る語は：カプセル化
空欄Bに入る語は： モニタ




回答２ :
2.1) para.Main05のメンバ変数valueに直接関連した処理を行うスレッド名と
その役割はそれぞれ次のとおり

スレッド名   | 役割
---------------------------------

JavaFX Application Thread | JavaFX Applicationのstart, stopを担当する。valueに関係する処理としては、sliderの値を監視して、変化した場合はaddListenerが発火することで、valueの値を変更する。
thread-4 | valueを受け取り、指定の座標にモグラを描画する役割を担っている。valueの値によりモグラのサイズが変更される。


2.2)
ユーザ視点でのプログラムの不具合

sliderを使ってvalueの値を変えても、volatile修飾子がついていないために、変更が反映されないor遅れて反映されることが起こり得る。


不具合の原因についての講義で説明されたプログラムを処理する仕組みに基づいた説明

原因は、スレッドはvolatile修飾子がついていない共有変数について作業用のコピーをアクセス速度向上のためにとることがあり、値の変化を別スレッドが感知できないために、速やかな値の反映が行われないことによる。


回答3 :
3.1)
配布されたpara.Main06による仕様のように動かない挙動の説明









3.2)
つぎのどちらかの行を消して回答せよ
メソッドduplicate()は deep copy である
メソッドduplicate()は shallow copy である。

スレッドセーフであると考える場合、その理由の説明







スレッドセーフでないと考える場合、ソースコード修正部分とその説明







回答4 :
4.1)
２つのスレッド
１つ目のスレッドとその役割は次のとおり




２つ目のスレッドとその役割は次のとおり




4.2)
para.game.GameFrameのメンバ変数xyについてsynchronizedメソッドによる同
期を行わなかった場合に生じる不正確なデータの処理の例は次のとおり





volatile修飾では不十分であることの理由






4.3)
para.game.GameFrameのメンバ変数leftonやrightonにvolatile修飾を付けるこ
とでマルチスレッドに対応できることの説明







4.4)
ゲーム性を高めるために行った実装についての説明
得点ルールとその計算法の実装





得点を表示するために行った実装






課題3で表示される図形を利用するための実装






ゲームの終了条件を定めるための実装






4.5)
更なるゲーム性の向上のための追加実装についての説明









工夫した点や感想：

