--------------------------

学籍番号 : 20B30790
氏名 : 藤井一喜

--------------------------

回答1.2 : イベントハンドラを登録したオブジェクトは次のとおり

以下のように root オブジェクトにイベントハンドラを設定した。

```
    root.setOnKeyTyped(event -> {
      String inputKey = event.getCharacter();
      if (inputKey.equals("=")) {
        outputLabel.setText(executor.operation(stringBuffer.toString()));
        stringBuffer.setLength(0);
        inputLabel.setText("");
      } else if (inputKey.equals("<")) {
        stringBuffer.deleteCharAt(stringBuffer.length() - 1);
        inputLabel.setText(stringBuffer.toString());
      } else {
        stringBuffer.append(inputKey);
        inputLabel.setText(stringBuffer.toString());
      }
    });
```



イベントハンドラを上のように登録した理由は以下のとおり


理由としては、ユーザーとしてはどこのオブジェクトにフォーカスがあってもキーボードに入力をすれば電卓による計算ができることを望んでいると考えたためである。



回答4 : package para.graphic.parserの動作の説明





if-else文を並べた実装方法と比べた拡張性に関する利点はつぎのとおり








回答5 : para.graphic.parserパッケージの各クラスのアクセス修飾を次のようにした
AttributeParser       public ->
CircleParser          public ->　　
ImageParser           public ->　　
MainParser            public ->
MetaParser            public ->
RectangleParser       public ->
ShapeManagerParser    public ->
ShapeParser           public ->
TargetParser          public ->

上記のようにアクセス修飾をした理由は次のとおり







回答6 : para.graphic.parser.ImageParserの仕組みの説明










工夫した点や感想：

